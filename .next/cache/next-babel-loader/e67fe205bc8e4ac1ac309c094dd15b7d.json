{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jou/Escritorio/jouhell/phasmophobia/src/components/list-of-cards.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport Card from './card';\nimport styled from 'styled-components';\nimport useTestsContext from '../context';\nimport data from '../../data.json';\nimport { filter, isEqual, map, sortBy, isEmpty, take, difference, find } from 'lodash';\nvar Container = styled.div.withConfig({\n  displayName: \"list-of-cards__Container\",\n  componentId: \"d3bqbv-0\"\n})([\"display:flex;overflow:auto;padding:16px;margin-top:120px;> *{margin-right:24px;}>:last-child{margin-right:0;}\"]);\n_c = Container;\n\nvar ListOfCards = function ListOfCards() {\n  _s();\n\n  var _useTestsContext = useTestsContext(),\n      tests = _useTestsContext.tests;\n\n  var _useState = useState(undefined),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var ghosts = data.ghosts,\n      evidences = data.evidences;\n  useEffect(function () {\n    var testsFilter = filter(tests, function (test) {\n      return !!test;\n    });\n    var testsIds = map(testsFilter, function (item) {\n      return item.id;\n    });\n    var result = [];\n\n    if (isEmpty(testsIds) || testsIds.length < 2) {\n      setState(undefined);\n      return;\n    }\n\n    var resultFiltered = filter(ghosts, function (ghost) {\n      var evidencesIdsSorted = sortBy(ghost.evidencesId);\n      var testsIdSorted = sortBy(testsIds);\n      var ghostEvidencesIds = take(evidencesIdsSorted, testsIds.length);\n      var equal = isEqual(ghostEvidencesIds, testsIdSorted);\n\n      if (equal && testsIds.length == 2) {\n        var diff = difference(evidencesIdsSorted, testsIdSorted);\n        result.push(_objectSpread(_objectSpread({}, ghost), {}, {\n          difference: find(evidences, function (item) {\n            return item.id === diff[0];\n          }).label\n        }));\n      }\n\n      return equal;\n    });\n    setState(isEmpty(result) ? resultFiltered : result);\n  }, [tests]);\n  var renderCards = map(state, function (item) {\n    return /*#__PURE__*/_jsxDEV(Card, _objectSpread({}, item), item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 44\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: renderCards\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(ListOfCards, \"GZvJ1prW8NoFb1NXmlXHbh46cf4=\", false, function () {\n  return [useTestsContext];\n});\n\n_c2 = ListOfCards;\nexport default ListOfCards;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ListOfCards\");","map":{"version":3,"sources":["/home/jou/Escritorio/jouhell/phasmophobia/src/components/list-of-cards.js"],"names":["React","useEffect","useState","Card","styled","useTestsContext","data","filter","isEqual","map","sortBy","isEmpty","take","difference","find","Container","div","ListOfCards","tests","undefined","state","setState","ghosts","evidences","testsFilter","test","testsIds","item","id","result","length","resultFiltered","ghost","evidencesIdsSorted","evidencesId","testsIdSorted","ghostEvidencesIds","equal","diff","push","label","renderCards"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,GAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,IANF,EAOEC,UAPF,EAQEC,IARF,QASO,QATP;AAWA,IAAMC,SAAS,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,qHAAf;KAAMD,S;;AAeN,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,yBACNZ,eAAe,EADT;AAAA,MAChBa,KADgB,oBAChBA,KADgB;;AAAA,kBAGEhB,QAAQ,CAACiB,SAAD,CAHV;AAAA,MAGjBC,KAHiB;AAAA,MAGVC,QAHU;;AAAA,MAKhBC,MALgB,GAKMhB,IALN,CAKhBgB,MALgB;AAAA,MAKRC,SALQ,GAKMjB,IALN,CAKRiB,SALQ;AAOxBtB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMuB,WAAW,GAAGjB,MAAM,CAACW,KAAD,EAAQ,UAACO,IAAD;AAAA,aAAU,CAAC,CAACA,IAAZ;AAAA,KAAR,CAA1B;AAEA,QAAMC,QAAQ,GAAGjB,GAAG,CAACe,WAAD,EAAc,UAACG,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAf;AAAA,KAAd,CAApB;AAEA,QAAIC,MAAM,GAAG,EAAb;;AAEA,QAAIlB,OAAO,CAACe,QAAD,CAAP,IAAqBA,QAAQ,CAACI,MAAT,GAAkB,CAA3C,EAA8C;AAC5CT,MAAAA,QAAQ,CAACF,SAAD,CAAR;AAEA;AACD;;AAED,QAAMY,cAAc,GAAGxB,MAAM,CAACe,MAAD,EAAS,UAACU,KAAD,EAAW;AAC/C,UAAMC,kBAAkB,GAAGvB,MAAM,CAACsB,KAAK,CAACE,WAAP,CAAjC;AAEA,UAAMC,aAAa,GAAGzB,MAAM,CAACgB,QAAD,CAA5B;AAEA,UAAMU,iBAAiB,GAAGxB,IAAI,CAACqB,kBAAD,EAAqBP,QAAQ,CAACI,MAA9B,CAA9B;AAEA,UAAMO,KAAK,GAAG7B,OAAO,CAAC4B,iBAAD,EAAoBD,aAApB,CAArB;;AAEA,UAAIE,KAAK,IAAIX,QAAQ,CAACI,MAAT,IAAmB,CAAhC,EAAmC;AACjC,YAAMQ,IAAI,GAAGzB,UAAU,CAACoB,kBAAD,EAAqBE,aAArB,CAAvB;AAEAN,QAAAA,MAAM,CAACU,IAAP,iCACKP,KADL;AAEEnB,UAAAA,UAAU,EAAEC,IAAI,CAACS,SAAD,EAAY,UAACI,IAAD;AAAA,mBAAUA,IAAI,CAACC,EAAL,KAAYU,IAAI,CAAC,CAAD,CAA1B;AAAA,WAAZ,CAAJ,CAA+CE;AAF7D;AAID;;AAED,aAAOH,KAAP;AACD,KAnB4B,CAA7B;AAqBAhB,IAAAA,QAAQ,CAACV,OAAO,CAACkB,MAAD,CAAP,GAAkBE,cAAlB,GAAmCF,MAApC,CAAR;AACD,GAnCQ,EAmCN,CAACX,KAAD,CAnCM,CAAT;AAqCA,MAAMuB,WAAW,GAAGhC,GAAG,CAACW,KAAD,EAAQ,UAACO,IAAD;AAAA,wBAAU,QAAC,IAAD,oBAAwBA,IAAxB,GAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,aAAV;AAAA,GAAR,CAAvB;AAEA,sBAAO,QAAC,SAAD;AAAA,cAAYa;AAAZ;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CA/CD;;GAAMxB,W;UACcZ,e;;;MADdY,W;AAiDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Card from './card'\nimport styled from 'styled-components'\nimport useTestsContext from '../context'\nimport data from '../../data.json'\nimport {\n  filter,\n  isEqual,\n  map,\n  sortBy,\n  isEmpty,\n  take,\n  difference,\n  find,\n} from 'lodash'\n\nconst Container = styled.div`\n  display: flex;\n  overflow: auto;\n  padding: 16px;\n  margin-top: 120px;\n\n  > * {\n    margin-right: 24px;\n  }\n\n  > :last-child {\n    margin-right: 0;\n  }\n`\n\nconst ListOfCards = () => {\n  const { tests } = useTestsContext()\n\n  const [state, setState] = useState(undefined)\n\n  const { ghosts, evidences } = data\n\n  useEffect(() => {\n    const testsFilter = filter(tests, (test) => !!test)\n\n    const testsIds = map(testsFilter, (item) => item.id)\n\n    let result = []\n\n    if (isEmpty(testsIds) || testsIds.length < 2) {\n      setState(undefined)\n\n      return\n    }\n\n    const resultFiltered = filter(ghosts, (ghost) => {\n      const evidencesIdsSorted = sortBy(ghost.evidencesId)\n\n      const testsIdSorted = sortBy(testsIds)\n\n      const ghostEvidencesIds = take(evidencesIdsSorted, testsIds.length)\n\n      const equal = isEqual(ghostEvidencesIds, testsIdSorted)\n\n      if (equal && testsIds.length == 2) {\n        const diff = difference(evidencesIdsSorted, testsIdSorted)\n\n        result.push({\n          ...ghost,\n          difference: find(evidences, (item) => item.id === diff[0]).label,\n        })\n      }\n\n      return equal\n    })\n\n    setState(isEmpty(result) ? resultFiltered : result)\n  }, [tests])\n\n  const renderCards = map(state, (item) => <Card key={item.id} {...item} />)\n\n  return <Container>{renderCards}</Container>\n}\n\nexport default ListOfCards\n"]},"metadata":{},"sourceType":"module"}