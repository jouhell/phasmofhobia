{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jou/Escritorio/jouhell/phasmophobia/src/components/list-of-cards.js\";\nimport React, { useEffect, useState } from 'react';\nimport Card from './card';\nimport styled from 'styled-components';\nimport useTestsContext from '../context';\nimport data from '../../data.json';\nimport { filter, isEqual, map, sortBy, isEmpty, take } from 'lodash';\nconst Container = styled.div.withConfig({\n  displayName: \"list-of-cards__Container\",\n  componentId: \"d3bqbv-0\"\n})([\"display:flex;overflow:auto;> *{margin-right:24px;}>:last-child{margin-right:0;}\"]);\n\nconst ListOfCards = () => {\n  const {\n    tests\n  } = useTestsContext();\n  const {\n    state,\n    setState\n  } = useState([]);\n  const {\n    ghosts\n  } = data;\n  useEffect(() => {\n    const testsFilter = filter(tests, test => !!test);\n    const testsIds = map(testsFilter, item => item.id);\n\n    if (!isEmpty(testsIds)) {\n      const result = filter(ghosts, ghost => {\n        const ghostEvidencesIds = take(sortBy(ghost.evidencesId), testsIds.length);\n        return isEqual(ghostEvidencesIds, sortBy(testsIds));\n      });\n      setState(result);\n    }\n  }, [tests]);\n  console.log(state);\n  const renderCards = map([0, 1, 2], (_, index) => /*#__PURE__*/_jsxDEV(Card, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 52\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: renderCards\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\nexport default ListOfCards;","map":{"version":3,"sources":["/home/jou/Escritorio/jouhell/phasmophobia/src/components/list-of-cards.js"],"names":["React","useEffect","useState","Card","styled","useTestsContext","data","filter","isEqual","map","sortBy","isEmpty","take","Container","div","ListOfCards","tests","state","setState","ghosts","testsFilter","test","testsIds","item","id","result","ghost","ghostEvidencesIds","evidencesId","length","console","log","renderCards","_","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,GAA1B,EAA+BC,MAA/B,EAAuCC,OAAvC,EAAgDC,IAAhD,QAA4D,QAA5D;AAEA,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,uFAAf;;AAaA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAYX,eAAe,EAAjC;AAEA,QAAM;AAAEY,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM;AAAEiB,IAAAA;AAAF,MAAab,IAAnB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,WAAW,GAAGb,MAAM,CAACS,KAAD,EAASK,IAAD,IAAU,CAAC,CAACA,IAApB,CAA1B;AAEA,UAAMC,QAAQ,GAAGb,GAAG,CAACW,WAAD,EAAeG,IAAD,IAAUA,IAAI,CAACC,EAA7B,CAApB;;AAEA,QAAI,CAACb,OAAO,CAACW,QAAD,CAAZ,EAAwB;AACtB,YAAMG,MAAM,GAAGlB,MAAM,CAACY,MAAD,EAAUO,KAAD,IAAW;AACvC,cAAMC,iBAAiB,GAAGf,IAAI,CAC5BF,MAAM,CAACgB,KAAK,CAACE,WAAP,CADsB,EAE5BN,QAAQ,CAACO,MAFmB,CAA9B;AAKA,eAAOrB,OAAO,CAACmB,iBAAD,EAAoBjB,MAAM,CAACY,QAAD,CAA1B,CAAd;AACD,OAPoB,CAArB;AASAJ,MAAAA,QAAQ,CAACO,MAAD,CAAR;AACD;AACF,GAjBQ,EAiBN,CAACT,KAAD,CAjBM,CAAT;AAmBAc,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AAEA,QAAMe,WAAW,GAAGvB,GAAG,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAACwB,CAAD,EAAIC,KAAJ,kBAAc,QAAC,IAAD,MAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,UAA1B,CAAvB;AAEA,sBAAO,QAAC,SAAD;AAAA,cAAYF;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA/BD;;AAiCA,eAAejB,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Card from './card'\nimport styled from 'styled-components'\nimport useTestsContext from '../context'\nimport data from '../../data.json'\nimport { filter, isEqual, map, sortBy, isEmpty, take } from 'lodash'\n\nconst Container = styled.div`\n  display: flex;\n  overflow: auto;\n\n  > * {\n    margin-right: 24px;\n  }\n\n  > :last-child {\n    margin-right: 0;\n  }\n`\n\nconst ListOfCards = () => {\n  const { tests } = useTestsContext()\n\n  const { state, setState } = useState([])\n\n  const { ghosts } = data\n\n  useEffect(() => {\n    const testsFilter = filter(tests, (test) => !!test)\n\n    const testsIds = map(testsFilter, (item) => item.id)\n\n    if (!isEmpty(testsIds)) {\n      const result = filter(ghosts, (ghost) => {\n        const ghostEvidencesIds = take(\n          sortBy(ghost.evidencesId),\n          testsIds.length\n        )\n\n        return isEqual(ghostEvidencesIds, sortBy(testsIds))\n      })\n\n      setState(result)\n    }\n  }, [tests])\n\n  console.log(state)\n\n  const renderCards = map([0, 1, 2], (_, index) => <Card key={index} />)\n\n  return <Container>{renderCards}</Container>\n}\n\nexport default ListOfCards\n"]},"metadata":{},"sourceType":"module"}