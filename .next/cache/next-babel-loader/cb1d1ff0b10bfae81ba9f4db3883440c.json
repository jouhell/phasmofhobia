{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jou/Escritorio/jouhell/phasmophobia/src/components/list-of-cards.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport Card from './card';\nimport styled from 'styled-components';\nimport useTestsContext from '../context';\nimport data from '../../data.json';\nimport { filter, isEqual, map, sortBy, isEmpty, take, uniq } from 'lodash';\nconst Container = styled.div.withConfig({\n  displayName: \"list-of-cards__Container\",\n  componentId: \"d3bqbv-0\"\n})([\"display:flex;overflow:auto;padding:16px;> *{margin-right:24px;}>:last-child{margin-right:0;}\"]);\n\nconst ListOfCards = () => {\n  const {\n    tests\n  } = useTestsContext();\n  const {\n    0: state,\n    1: setState\n  } = useState(undefined);\n  const {\n    ghosts\n  } = data;\n  useEffect(() => {\n    const testsFilter = filter(tests, test => !!test);\n    const testsIds = map(testsFilter, item => item.id);\n\n    if (isEmpty(testsIds) || testsIds.length < 2) {\n      setState(undefined);\n      return;\n    }\n\n    const result = filter(ghosts, ghost => {\n      const ghostEvidencesIds = take(sortBy(ghost.evidencesId), testsIds.length);\n      return isEqual(ghostEvidencesIds, sortBy(testsIds));\n    });\n    setState(result);\n  }, [tests]);\n  const renderCards = map(state, item => /*#__PURE__*/_jsxDEV(Card, _objectSpread({}, item), item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 44\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: renderCards\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\nexport default ListOfCards;","map":{"version":3,"sources":["/home/jou/Escritorio/jouhell/phasmophobia/src/components/list-of-cards.js"],"names":["React","useEffect","useState","Card","styled","useTestsContext","data","filter","isEqual","map","sortBy","isEmpty","take","uniq","Container","div","ListOfCards","tests","state","setState","undefined","ghosts","testsFilter","test","testsIds","item","id","length","result","ghost","ghostEvidencesIds","evidencesId","renderCards"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,GAA1B,EAA+BC,MAA/B,EAAuCC,OAAvC,EAAgDC,IAAhD,EAAsDC,IAAtD,QAAkE,QAAlE;AAEA,MAAMC,SAAS,GAAGV,MAAM,CAACW,GAAV;AAAA;AAAA;AAAA,oGAAf;;AAcA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAYZ,eAAe,EAAjC;AAEA,QAAM;AAAA,OAACa,KAAD;AAAA,OAAQC;AAAR,MAAoBjB,QAAQ,CAACkB,SAAD,CAAlC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAaf,IAAnB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,WAAW,GAAGf,MAAM,CAACU,KAAD,EAASM,IAAD,IAAU,CAAC,CAACA,IAApB,CAA1B;AAEA,UAAMC,QAAQ,GAAGf,GAAG,CAACa,WAAD,EAAeG,IAAD,IAAUA,IAAI,CAACC,EAA7B,CAApB;;AAEA,QAAIf,OAAO,CAACa,QAAD,CAAP,IAAqBA,QAAQ,CAACG,MAAT,GAAkB,CAA3C,EAA8C;AAC5CR,MAAAA,QAAQ,CAACC,SAAD,CAAR;AAEA;AACD;;AAED,UAAMQ,MAAM,GAAGrB,MAAM,CAACc,MAAD,EAAUQ,KAAD,IAAW;AACvC,YAAMC,iBAAiB,GAAGlB,IAAI,CAACF,MAAM,CAACmB,KAAK,CAACE,WAAP,CAAP,EAA4BP,QAAQ,CAACG,MAArC,CAA9B;AAEA,aAAOnB,OAAO,CAACsB,iBAAD,EAAoBpB,MAAM,CAACc,QAAD,CAA1B,CAAd;AACD,KAJoB,CAArB;AAMAL,IAAAA,QAAQ,CAACS,MAAD,CAAR;AACD,GAlBQ,EAkBN,CAACX,KAAD,CAlBM,CAAT;AAoBA,QAAMe,WAAW,GAAGvB,GAAG,CAACS,KAAD,EAASO,IAAD,iBAAU,QAAC,IAAD,oBAAwBA,IAAxB,GAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,UAAlB,CAAvB;AAEA,sBAAO,QAAC,SAAD;AAAA,cAAYM;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA9BD;;AAgCA,eAAehB,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Card from './card'\nimport styled from 'styled-components'\nimport useTestsContext from '../context'\nimport data from '../../data.json'\nimport { filter, isEqual, map, sortBy, isEmpty, take, uniq } from 'lodash'\n\nconst Container = styled.div`\n  display: flex;\n  overflow: auto;\n  padding: 16px;\n\n  > * {\n    margin-right: 24px;\n  }\n\n  > :last-child {\n    margin-right: 0;\n  }\n`\n\nconst ListOfCards = () => {\n  const { tests } = useTestsContext()\n\n  const [state, setState] = useState(undefined)\n\n  const { ghosts } = data\n\n  useEffect(() => {\n    const testsFilter = filter(tests, (test) => !!test)\n\n    const testsIds = map(testsFilter, (item) => item.id)\n\n    if (isEmpty(testsIds) || testsIds.length < 2) {\n      setState(undefined)\n\n      return\n    }\n\n    const result = filter(ghosts, (ghost) => {\n      const ghostEvidencesIds = take(sortBy(ghost.evidencesId), testsIds.length)\n\n      return isEqual(ghostEvidencesIds, sortBy(testsIds))\n    })\n\n    setState(result)\n  }, [tests])\n\n  const renderCards = map(state, (item) => <Card key={item.id} {...item} />)\n\n  return <Container>{renderCards}</Container>\n}\n\nexport default ListOfCards\n"]},"metadata":{},"sourceType":"module"}