{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jou/Escritorio/jouhell/phasmophobia/src/components/list-of-cards.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Card from './card';\nimport styled from 'styled-components';\nimport useTestsContext from '../context';\nimport data from '../../data.json';\nimport { filter, isEqual, map, sortBy, isEmpty, take } from 'lodash';\nvar Container = styled.div.withConfig({\n  displayName: \"list-of-cards__Container\",\n  componentId: \"d3bqbv-0\"\n})([\"display:flex;overflow:auto;> *{margin-right:24px;}>:last-child{margin-right:0;}\"]);\n_c = Container;\n\nvar ListOfCards = function ListOfCards() {\n  _s();\n\n  var _useTestsContext = useTestsContext(),\n      tests = _useTestsContext.tests;\n\n  var ghosts = data.ghosts;\n  useEffect(function () {\n    var testsFilter = filter(tests, function (test) {\n      return !!test;\n    });\n    var testsIds = map(testsFilter, function (item) {\n      return item.id;\n    });\n\n    if (!isEmpty(testsIds)) {\n      var result = filter(ghosts, function (ghost) {\n        var ghostEvidencesIds = take(sortBy(ghost.evidencesId), testsIds.length);\n        return isEqual(ghostEvidencesIds, sortBy(testsIds));\n      });\n    }\n\n    console.log(testsIds);\n  }, [tests]);\n  var renderCards = map([0, 1, 2], function (_, index) {\n    return /*#__PURE__*/_jsxDEV(Card, {}, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 52\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: renderCards\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(ListOfCards, \"ycoGBzqXZluwQLBQ7Y1kW+xPj6I=\", false, function () {\n  return [useTestsContext];\n});\n\n_c2 = ListOfCards;\nexport default ListOfCards;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ListOfCards\");","map":{"version":3,"sources":["/home/jou/Escritorio/jouhell/phasmophobia/src/components/list-of-cards.js"],"names":["React","useEffect","Card","styled","useTestsContext","data","filter","isEqual","map","sortBy","isEmpty","take","Container","div","ListOfCards","tests","ghosts","testsFilter","test","testsIds","item","id","result","ghost","ghostEvidencesIds","evidencesId","length","console","log","renderCards","_","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,GAA1B,EAA+BC,MAA/B,EAAuCC,OAAvC,EAAgDC,IAAhD,QAA4D,QAA5D;AAEA,IAAMC,SAAS,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,uFAAf;KAAMD,S;;AAaN,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,yBACNV,eAAe,EADT;AAAA,MAChBW,KADgB,oBAChBA,KADgB;;AAAA,MAGhBC,MAHgB,GAGLX,IAHK,CAGhBW,MAHgB;AAKxBf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMgB,WAAW,GAAGX,MAAM,CAACS,KAAD,EAAQ,UAACG,IAAD;AAAA,aAAU,CAAC,CAACA,IAAZ;AAAA,KAAR,CAA1B;AAEA,QAAMC,QAAQ,GAAGX,GAAG,CAACS,WAAD,EAAc,UAACG,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAf;AAAA,KAAd,CAApB;;AAEA,QAAI,CAACX,OAAO,CAACS,QAAD,CAAZ,EAAwB;AACtB,UAAMG,MAAM,GAAGhB,MAAM,CAACU,MAAD,EAAS,UAACO,KAAD,EAAW;AACvC,YAAMC,iBAAiB,GAAGb,IAAI,CAC5BF,MAAM,CAACc,KAAK,CAACE,WAAP,CADsB,EAE5BN,QAAQ,CAACO,MAFmB,CAA9B;AAKA,eAAOnB,OAAO,CAACiB,iBAAD,EAAoBf,MAAM,CAACU,QAAD,CAA1B,CAAd;AACD,OAPoB,CAArB;AAQD;;AAEDQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACD,GAjBQ,EAiBN,CAACJ,KAAD,CAjBM,CAAT;AAmBA,MAAMc,WAAW,GAAGrB,GAAG,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,UAACsB,CAAD,EAAIC,KAAJ;AAAA,wBAAc,QAAC,IAAD,MAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,aAAd;AAAA,GAAZ,CAAvB;AAEA,sBAAO,QAAC,SAAD;AAAA,cAAYF;AAAZ;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CA3BD;;GAAMf,W;UACcV,e;;;MADdU,W;AA6BN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport Card from './card'\nimport styled from 'styled-components'\nimport useTestsContext from '../context'\nimport data from '../../data.json'\nimport { filter, isEqual, map, sortBy, isEmpty, take } from 'lodash'\n\nconst Container = styled.div`\n  display: flex;\n  overflow: auto;\n\n  > * {\n    margin-right: 24px;\n  }\n\n  > :last-child {\n    margin-right: 0;\n  }\n`\n\nconst ListOfCards = () => {\n  const { tests } = useTestsContext()\n\n  const { ghosts } = data\n\n  useEffect(() => {\n    const testsFilter = filter(tests, (test) => !!test)\n\n    const testsIds = map(testsFilter, (item) => item.id)\n\n    if (!isEmpty(testsIds)) {\n      const result = filter(ghosts, (ghost) => {\n        const ghostEvidencesIds = take(\n          sortBy(ghost.evidencesId),\n          testsIds.length\n        )\n\n        return isEqual(ghostEvidencesIds, sortBy(testsIds))\n      })\n    }\n\n    console.log(testsIds)\n  }, [tests])\n\n  const renderCards = map([0, 1, 2], (_, index) => <Card key={index} />)\n\n  return <Container>{renderCards}</Container>\n}\n\nexport default ListOfCards\n"]},"metadata":{},"sourceType":"module"}